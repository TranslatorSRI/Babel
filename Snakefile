configfile: "config.yaml"

include: "src/snakefiles/datacollect.snakefile"
include: "src/snakefiles/anatomy.snakefile"
include: "src/snakefiles/cell_line.snakefile"
include: "src/snakefiles/gene.snakefile"
include: "src/snakefiles/protein.snakefile"
include: "src/snakefiles/geneprotein.snakefile"
include: "src/snakefiles/diseasephenotype.snakefile"
include: "src/snakefiles/process.snakefile"
include: "src/snakefiles/chemical.snakefile"
include: "src/snakefiles/drugchemical.snakefile"
include: "src/snakefiles/taxon.snakefile"
include: "src/snakefiles/genefamily.snakefile"
include: "src/snakefiles/leftover_umls.snakefile"
include: "src/snakefiles/macromolecular_complex.snakefile"
include: "src/snakefiles/publications.snakefile"

include: "src/snakefiles/duckdb.snakefile"
include: "src/snakefiles/reports.snakefile"
include: "src/snakefiles/exports.snakefile"

include: "src/snakefiles/translator_hierarchy.snakefile"

# Some global settings.
import os
os.environ['TMPDIR'] = config['tmp_directory']

# Top-level rules.
rule all:
    input:
        # See rule all_outputs later in this file for how we generate all the outputs.
        config['output_directory'] + '/reports/outputs_done',
        # reports_done are generated by the rules in src/snakefiles/
        config['output_directory'] + '/reports/reports_done',

        # Build all the Parquet files.
        config['output_directory'] + '/duckdb/done',

        # Build all the DuckDB (index-wide) reports.
        config['output_directory'] + '/reports/duckdb/done',

        # Build all the exports.
        config['output_directory'] + '/kgx/done',
        config['output_directory'] + '/sapbert-training-data/done',

        # Build the Ubergraph/Translator Hierarchy.
        config['output_directory'] + '/reports/ubergraph_hierarchy_done',
    output:
        x = config['output_directory'] + '/reports/all_done'
    shell:
        "echo 'done' >> {output.x}"

rule all_outputs:
    input:
        config['output_directory'] + '/reports/anatomy_done',
        config['output_directory'] + '/reports/chemicals_done',
        config['output_directory'] + '/reports/disease_done',
        config['output_directory'] + '/reports/gene_done',
        config['output_directory'] + '/reports/genefamily_done',
        config['output_directory'] + '/reports/geneprotein_done',
        config['output_directory'] + '/reports/process_done',
        config['output_directory'] + '/reports/protein_done',
        config['output_directory'] + '/reports/taxon_done',
        config['output_directory'] + '/reports/cell_line_done',
        config['output_directory'] + '/reports/umls_done',
        config['output_directory'] + '/reports/macromolecular_complex_done',
        config['output_directory'] + '/reports/drugchemical_done',
        config['output_directory'] + '/reports/publications_done',
    output:
        x = config['output_directory'] + '/reports/outputs_done'
    shell:
        "echo 'done' >> {output.x}"

rule clean_compendia:
    params:
        dir=config['output_directory']
    shell:
        "rm {params.dir}/compendia/*; rm {params.dir}/synonyms/*"

rule clean_downloads:
    params:
        dir=config['download_directory']
    shell:
        "rm -rf {params.dir}/*"

# Sometimes a synonyms file is available as a .gz file, but not as the .txt file itself.
# This rule is here so that Snakemake knows how to uncompress it if needed.
rule uncompress_synonym_file:
    input:
        config['output_directory'] + '/synonyms/{synonym_file}.txt.gz'
    output:
        config['output_directory'] + '/synonyms/{synonym_file}.txt'
    shell:
        'gunzip {input} -c > {output}'
